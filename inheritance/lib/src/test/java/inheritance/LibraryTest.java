/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void RestaurantConstTest() {
        Restaurant restaurant = new Restaurant("Mahmoud", 200);
        System.out.println("Restaurant: toSting: " + restaurant);
        assertEquals("restaurant name should return 'Mahmoud'","Mahmoud", restaurant.getName());
        assertEquals("review stars should return 0 stars",restaurant.getStars()  , 0f,0.0002);
        assertEquals("restaurant price should return '200'",200, restaurant.getPrice());
    }

    @Test public void ReviewConstTest() {
        Restaurant restaurant = new Restaurant("Mahmoud", 200);

        Review review = new Review("Mahmoud","I really liked this restaurant", 4,restaurant);

        System.out.println("Review: toSting: " + review);
        assertEquals("review author should return 'Mahmoud'","Mahmoud", review.getAuthor());
        assertEquals("review stars should return 4 stars",review.getStars()  , 4);
        assertEquals("review body should return 'I really liked this restaurant'","I really liked this restaurant", review.getBody());

    }
    @Test public void ReviewToSting() {
        Restaurant restaurant = new Restaurant("Mahmoud", 200);
        Review review = new Review("Mahmoud","I really liked this restaurant", 4,restaurant);

        assertEquals("ReviewToSting should return 'I really liked this restaurant I rate this restaurant with 4 stars'","Mahmoud: \n ===> I really liked this restaurant I rate this restaurant with 4 stars", review.toString());
    }
    @Test public void RestaurantToSting() {
        Restaurant restaurant = new Restaurant("Mahmoud", 200);
        assertEquals("RestaurantToSting should return 'Restaurant Mahmoud, has prices of 200$, and 0.0 stars rating'","Restaurant Mahmoud, has prices of 200$, and 0.0 stars rating", restaurant.toString());
    }
    @Test public void AddReviewTest() {
        Restaurant restaurant = new Restaurant("Malek",324);
        Restaurant restaurant2 = new Restaurant("Malek2",2);

        Review newReview = new Review("Mahmoud","I really didn't like this restaurant", 1,restaurant);
        Review newReview2 = new Review("Mahmoud2","I really didn't like this restaurant2", 2,restaurant);
        Review newReview3 = new Review("Mahmoud3","I really didn't like this restaurant3", 3,restaurant);

        Review newReview5 = new Review("Mahmoud3","I really didn't like this restaurant5", 5,restaurant2);

        restaurant.addReview(newReview);
        restaurant.addReview(newReview2);
        restaurant.addReview(newReview3);

        restaurant2.addReview(newReview5);

        ArrayList<Review> reviews = restaurant.getReviews();
        ArrayList<Review> reviews5 = restaurant2.getReviews();
        for (Review rev:reviews5) {
            System.out.println("Reviews 2 List: " + rev.toString());
        }
        for (Review rev:reviews) {
            System.out.println("Reviews List: " + rev.toString());
        }

        assertEquals("review author should return 'Mahmoud'","Mahmoud", newReview.getAuthor());
        assertEquals("review stars should return 1 stars",newReview.getStars()  , 1);
        assertEquals("review body should return 'I really didn't like this restaurant'","I really didn't like this restaurant", newReview.getBody());

        assertEquals("restaurant name should return 'Malek'","Malek", newReview.getRestaurant().getName());
//        assertEquals();
        assertEquals("review stars should return 2 stars",newReview.getRestaurant().getStars()  , 2f,0.0002);
        assertEquals("restaurant price should return '324'",324, newReview.getRestaurant().getPrice());
    }
}
