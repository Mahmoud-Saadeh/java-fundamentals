/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.Test;

import static org.junit.Assert.*;

import java.io.File;
import java.net.URI;
import java.nio.file.Path;
import java.nio.file.Paths;

public class AppTest {
    private static Path filePath(String file){
        String ttt = File.separator;
        Path p1;
        if (ttt.equals("\\")){
            p1 = Paths.get(URI.create("file:///Users/STUDENT/401/java-fundamentals/linter/app/src/test/resources/"+file));
        }else{
            p1 = Paths.get("/mnt/c/Users/STUDENT/401/java-fundamentals/linter/app/src/test/resources"+file);
        }
        System.out.println(p1);
        return p1;
    }
    @Test
//    @DisplayName("missingSemicolon should return 0 errors")
    public void hasSemicolonNoErrors() {
        Path p1 = filePath("noErrors.js");

        int errorNum = App.missingSemicolon(p1).get("ErrorCount");
        int LineCount = App.missingSemicolon(p1).get("LineCount");
        assertEquals(14,(LineCount - errorNum));
    }

    @Test
//    @DisplayName("missingSemicolon should return 1 error")
    public void hasSemicolonOneErrors() {
        Path p1 = filePath("oneError.js");
        int errorNum = App.missingSemicolon(p1).get("ErrorCount");
        int LineCount = App.missingSemicolon(p1).get("LineCount");
        assertEquals(13,(LineCount - errorNum));
    }

    @Test
//    @DisplayName("missingSemicolon should return 4 errors")
    public void hasSemicolonFewErrors() {
        Path p1 = filePath("fewErrors.js");
        int errorNum = App.missingSemicolon(p1).get("ErrorCount");
        int LineCount = App.missingSemicolon(p1).get("LineCount");
        assertEquals(10,(LineCount - errorNum));
    }

    @Test
//    @DisplayName("missingSemicolon should return 4 errors")
    public void hasSemicolonManyErrors() {
        Path p1 = filePath("manyErrors.js");
        int errorNum = App.missingSemicolon(p1).get("ErrorCount");
        int LineCount = App.missingSemicolon(p1).get("LineCount");
        assertEquals(100,(LineCount - errorNum));
    }
    @Test
//    @DisplayName("missingSemicolon should return 4 errors")
    public void emptyFile() {
        Path p1 = filePath("empty.js");

        int LineCount = App.missingSemicolon(p1).get("LineCount");
        int errorNum = App.missingSemicolon(p1).get("ErrorCount");
        assertEquals(0,LineCount);
        assertEquals(0,errorNum);
    }
}
